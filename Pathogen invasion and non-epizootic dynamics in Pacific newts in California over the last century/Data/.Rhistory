View(tree)
tapply(tree[,7], tree[,3], sum)
sapply(tree[,5:8], mean)
tapply(tree$dbh, tree$spp, sum)
sapply(tree[,5:8], mean)
class(tree[,7])
sapply(tree[,5:8], mean)
sapply(tree$dbh, tree$spp, sum)
sapply(tree[,5], sum)
sapply(tree[,5], mean)
sapply(tree[,5:8], sum)
sapply(tree[,5:8], mean)
sapply(tree[,5:8], mean)
sapply(tree[,5:8], mean)
tapply(tree[,5:8], mean)
tapply(tree$spp, tree$BarkThick, max)
sapply(tree$spp, tree$BarkThick, max)
sapply(tree[,2], tree[,7], max)
tapply(tree[,2], tree[,7], max)
tapply(tree[,2], tree[,7])
tapply(tree[,7], tree[,2], max)
tapply(tree[,7], tree[,2], min )
```{r, echo=TRUE}
tapply(tree[,7], tree[,2], max)
tapply(tree[,7], tree[,2], min)
sort(tree$dhb)
sort(tree$dhb, na.rm=TRUE)
sort(tree$dbh)
order(tree$dbh)
rev(sort(tree$dbh))
rev(order(tree$dbh))
sort(tree$dhb, decreasing = TRUE)
sort(tree$dbh, decreasing = TRUE)
order(tree$dbh, decreasing = TRUE)
order(-tree$dbh)
tree[order(tree$dbh),]
tree[order(tree$season, tree$dbh),]
order(tree$BarkThick, increasing = TRUE)
order(tree$SapArea, decreasing = TRUE)
order(tree$BarkThick, increasing = TRUE)
sort(tree$BarkThick, increasing = TRUE)
order(tree$BarkThick)
tree[order(tree$BarkThick),]
tree[order(tree$SapArea, decreasing = TRUE),]
tree[order(-tree$SapArea),]
tree[order(tree$spp),]
tree1=subset(tree$tree, tree$SapDepth, tree$SapArea)
tree1=subset(tree, tree$tree, tree$SapDepth, tree$SapArea)
tree1=subset(tree, tree, SapDepth, SapArea)
tree1=subset(x=tree, tree, SapDepth, SapArea)
tree1=subset(tree, select=c(tree$tree, tree$SapDepth, tree$SapArea))
tree1=subset(tree, select=c(tree, SapDepth, SapArea))
tree1
tree1[order(-tree1$SapDepth),]
tree[order(tree$spp),]
tree[order(tree$SapArea),]
tapply(tree[,5:8], mean)
tapply(tree[,5:8], sum)
hist(tree$SapDepth, xlab="Sapwood Depth", main="Histogram: Sapwood Depth", col="gray50")
boxplot(SapDepth ~ spp, data=tree, ylab="SapDepth", col="darkslateblue", main="Boxplot: Sapwood Depth by Species")
# Notice that in this syntax for boxplot, you do not need to designate the data$column because there is a separate entry that specifies the data source.
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= “Area”, xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= “Area”, xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= “Area”, xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
plot(tree$dhb, tree$Heartwood, pch=17, col="darkred", ylab= “Area”, xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen")
pax(TRUE)
par(TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen")
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen")
par(new=TRUE)
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen")
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
which(compare)
compare=p8t!=p9t
which(compare)
compare=p29t=p33t
compare=p29t=p33t
library(seqinr)
seqs=read.fasta("/Users/hasansulaeman/Desktop/seqs.txt")
seqs$pat_005_week_0 # Lets pull up one of the sequences. Patient 5 week 48
seqs[5] # We're pulling up the contents of row 5. Got patient 7, week 41.
# I'm picking patient 31. I just randomly chose it
p29=seqs[[29]]
p30=seqs[[30]]
p31=seqs[[31]]
p32=seqs[[32]]
p33=seqs[[33]]
class(p29)
getLength(seqs[29:33]) # We're retrieving the # of base pairs are included per sequence
p29t=translate(p29, NAstring="X", ambiguous = FALSE, sens="F")
p30t=translate(p30, NAstring="X", ambiguous = FALSE, sens="F")
p31t=translate(p31, NAstring="X", ambiguous = FALSE, sens="F")
p32t=translate(p32, NAstring="X", ambiguous = FALSE, sens="F")
p33t=translate(p33, NAstring="X", ambiguous = FALSE, sens="F")
ptable=rbind(p29t, p30t, p31t, p32t, p33t)
getLength(p29t)
getLength(p30t)
getLength(p31t)
getLength(p32t)
getLength(p33t)
count(p29t, wordsize = 1, alphabet=s2c("X")) # We found 48 X's in my patient's week 0 sequence
count(p33t, wordsize = 1, alphabet=s2c("X")) # Compared to week 77, both weeks' sequences have 48 X's
table(p29t) # The function tells me there are 48 X's in patient 31's week 0 sequence
table(p29t) # K is the most common at 20
table(p33t) # K is still the most common at 18
ptable=cbind(p29t, p30t, p31t, p32t, p33t)
class(ptable)
dim(ptable) # 247 rows and 5 columns
compare=p29t!=p33t
compare=p29t!=p33t
which(compare)
n17r=ptable[c(46,66,70,73,74,119,180,184),c(1,5)]
n17r
p8t=translate(seqs[[8]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 9 week 0
p9t=translate(seqs[[9]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 9 week 31
ptable=cbind(p8t, p9t)
compare=p8t!=p9t
which(compare)
diff=ptable[c(65,162,178,192,207,232,241),1:2]
diff
p8t=translate(seqs[[27]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 30 week 0
p9t=translate(seqs[[28]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 30 week 23
ptable=cbind(p8t, p9t)
compare=p8t!=p9t
which(compare)
diff=ptable[c(122,215),1:2]
diff
p8t=translate(seqs[[37]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 36 week 0
p9t=translate(seqs[[38]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 36 week 24
ptable=cbind(p8t, p9t)
compare=p8t!=p9t
which(compare)
diff=ptable[c(38,197,205,211),1:2]
diff
p8t=translate(seqs[[12]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 30 week 0
p9t=translate(seqs[[13]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 30 week 23
ptable=cbind(p8t, p9t)
compare=p8t!=p9t
which(compare)
diff=ptable[c(122,215),1:2]
diff
p8t=translate(seqs[[12]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 30 week 0
p9t=translate(seqs[[13]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 30 week 23
ptable=cbind(p8t, p9t)
View(ptable)
compare=p8t!=p9t
which(compare)
diff=ptable[c(68,101,139,173,179,184,196,211),1:2]
diff
p8t=translate(seqs[[11]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 30 week 0
p9t=translate(seqs[[12]], NAstring="X", ambiguous = FALSE, sens="F") # Patient 30 week 23
ptable=cbind(p8t, p9t)
compare=p8t!=p9t
which(compare)
seqs
read.csv(file.choose())
read.csv(file.choose())
odf=read.csv(file.choose())
head(odf)
install.packages("swirl")
swirl
swirl(odf)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
swirl
swirl()
ls()
class(plants)
dim(plants)
row(plants)
Hasan Sulaeman
nrow(plansts)
nrow(plants)
ncol(plants)
object.size(plants)
par(new=TRUE)
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen")
plot(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
plot(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
plot(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
kenya=read.csv("Kenya.R.Data.csv", header=TRUE)
barplot(y, xlim=c(0,5), width=0.8, space=0.21, ylim=c(0,1000), axes=FALSE, xlab="", ylab="", col="azure4")
axis(1, ylim=c(0,1000), labels=FALSE)
y=c(0,0,0,0,861)
par(mar=c(5, 4, 4, 8) + 0.1)
barplot(kenya$Total, width=0.8, space=0.21, xlim=c(0,5), ylim=c(0,1000), axes=FALSE, xlab="Time Period", ylab="Sample Size", col="azure3")
par(new=TRUE)
barplot(y, xlim=c(0,5), width=0.8, space=0.21, ylim=c(0,1000), axes=FALSE, xlab="", ylab="", col="azure4")
axis(1, ylim=c(0,1000), labels=FALSE)
mtext(1, at=c(0.5:5.5), line=1, text = c("1931-1970", "1971-1980", "1981-1990", "1991-2000", "2006"), srt = 45, cex.lab=0.5)
axis(2)
par(new=TRUE)
plot(kenya$x.axis-0.05, kenya$Prevalence, type="l", lwd=2, ylab=" ", xlab=" ", ylim=c(0,100), xlim=c(0.5,5.5), axes=FALSE)
axis(4, line=-2)
mtext("Prevalence", side = 4, line = 0, cex = par("cex.lab"))
library(Hmisc)
errbar(kenya$x.axis-0.05, kenya$Prevalence, yplus=kenya$upper.cred, yminus=kenya$lower.cred,add=T,xlab="",pch="",lwd="1",cap=0.01 )
par(new=TRUE)
plot(kenya$x.axis+0.05, kenya$log10.zscore, type="l", xlim=c(0.5,5.5), lwd=2, ylab=" ", xlab=" ", ylim=c(0,6.1), lty=2, axes=FALSE)
axis(4, lwd=1, line=1.5, ylim=c(0,5))
mtext("Log10 Bd Load (Zoospore Equivalents)", side = 4, line = 3.5, cex = par("cex.lab"))
errbar(kenya$x.axis+0.05, kenya$log10.zscore, yplus=kenya$log.upper.ze, yminus=kenya$log.lower.ze,add=T,xlab="",pch="",lwd="1",cap=0.01)
par(new=TRUE)
plot(kenya$x.axis+0.05, kenya$max.log.zscore, axes=FALSE, ylab="", xlab="", xlim=c(0.5,5.5), ylim=c(0,6.1), lwd=2,pch=18)
par(new=TRUE)
abline(h=4, lty=3, lwd=0.75)
par(mar=c(5, 4, 4, 8) + 0.1)
barplot(kenya$Total, width=0.8, space=0.21, xlim=c(0,5), ylim=c(0,1000), axes=FALSE, xlab="Time Period", ylab="Sample Size", col="azure3")
par(new=TRUE)
barplot(y, xlim=c(0,5), width=0.8, space=0.21, ylim=c(0,1000), axes=FALSE, xlab="", ylab="", col="azure4")
axis(1, ylim=c(0,1000), labels=FALSE)
mtext(1, at=c(0.5:5.5), line=1, text = c("1931-1970", "1971-1980", "1981-1990", "1991-2000", "2006"), srt = 45, cex.lab=0.5)
axis(2)
par(new=TRUE)
plot(kenya$x.axis-0.05, kenya$Prevalence, type="l", lwd=2, ylab=" ", xlab=" ", ylim=c(0,100), xlim=c(0.5,5.5), axes=FALSE)
axis(4, line=-2)
mtext("Prevalence", side = 4, line = 0, cex = par("cex.lab"))
errbar(kenya$x.axis-0.05, kenya$Prevalence, yplus=kenya$upper.cred, yminus=kenya$lower.cred,add=T,xlab="",pch="",lwd="1",cap=0.01 )
par(new=TRUE)
plot(kenya$x.axis+0.05, kenya$log10.zscore, type="l", xlim=c(0.5,5.5), lwd=2, ylab=" ", xlab=" ", ylim=c(0,6.1), lty=2, axes=FALSE)
axis(4, lwd=1, line=1.5, ylim=c(0,5))
mtext("Log10 Bd Load (Zoospore Equivalents)", side = 4, line = 3.5, cex = par("cex.lab"))
errbar(kenya$x.axis+0.05, kenya$log10.zscore, yplus=kenya$log.upper.ze, yminus=kenya$log.lower.ze,add=T,xlab="",pch="",lwd="1",cap=0.01)
par(new=TRUE)
plot(kenya$x.axis+0.05, kenya$max.log.zscore, axes=FALSE, ylab="", xlab="", xlim=c(0.5,5.5), ylim=c(0,6.1), lwd=2,pch=18)
par(new=TRUE)
kenya=read.csv("/Users/hasansulaeman/Desktop/Mama.Africa.Files/Kenya.R.Data.csv", header=TRUE)
y=c(0,0,0,0,861)
par(mar=c(5, 4, 4, 8) + 0.1)
barplot(kenya$Total, width=0.8, space=0.21, xlim=c(0,5), ylim=c(0,1000), axes=FALSE, xlab="Time Period", ylab="Sample Size", col="azure3")
par(new=TRUE)
barplot(y, xlim=c(0,5), width=0.8, space=0.21, ylim=c(0,1000), axes=FALSE, xlab="", ylab="", col="azure4")
axis(1, ylim=c(0,1000), labels=FALSE)
mtext(1, at=c(0.5:5.5), line=1, text = c("1931-1970", "1971-1980", "1981-1990", "1991-2000", "2006"), srt = 45, cex.lab=0.5)
axis(2)
par(new=TRUE)
plot(kenya$x.axis-0.05, kenya$Prevalence, type="l", lwd=2, ylab=" ", xlab=" ", ylim=c(0,100), xlim=c(0.5,5.5), axes=FALSE)
axis(4, line=-2)
mtext("Prevalence", side = 4, line = 0, cex = par("cex.lab"))
errbar(kenya$x.axis-0.05, kenya$Prevalence, yplus=kenya$upper.cred, yminus=kenya$lower.cred,add=T,xlab="",pch="",lwd="1",cap=0.01 )
par(new=TRUE)
plot(kenya$x.axis+0.05, kenya$log10.zscore, type="l", xlim=c(0.5,5.5), lwd=2, ylab=" ", xlab=" ", ylim=c(0,6.1), lty=2, axes=FALSE)
axis(4, lwd=1, line=1.5, ylim=c(0,5))
mtext("Log10 Bd Load (Zoospore Equivalents)", side = 4, line = 3.5, cex = par("cex.lab"))
errbar(kenya$x.axis+0.05, kenya$log10.zscore, yplus=kenya$log.upper.ze, yminus=kenya$log.lower.ze,add=T,xlab="",pch="",lwd="1",cap=0.01)
par(new=TRUE)
plot(kenya$x.axis+0.05, kenya$max.log.zscore, axes=FALSE, ylab="", xlab="", xlim=c(0.5,5.5), ylim=c(0,6.1), lwd=2,pch=18)
par(new=TRUE)
abline(h=4, lty=3, lwd=0.75)
barplot(kenya$Total, width=0.8, space=0.21, xlim=c(0,5), ylim=c(0,1000), axes=FALSE, xlab="Time Period", ylab="Sample Size", col="azure3")
par(new=TRUE)
barplot(y, xlim=c(0,5), width=0.8, space=0.21, ylim=c(0,1000), axes=FALSE, xlab="", ylab="", col="azure4")
axis(1, ylim=c(0,1000), labels=FALSE)
axis(1, ylim=c(0,1000), labels=FALSE)
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
plot(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
detach("package:swirl", unload=TRUE)
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
plot(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
plot(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
par(mfrow=c(1,3))
tree=read.csv("/Users/hasansulaeman/Google Drive/Ecology of Infectious Diseases/Lab 4/Tree_data.csv", header=T)
tree=read.csv("/Users/hasansulaeman/Google Drive/Ecology of Infectious Diseases/Lab 4/Tree_data.csv", header=T)
head(tree)
tail(tree)
summary(tree)
names(tree)
dim(tree)
str(tree)
tapply(tree$dbh, tree$spp, mean)
#	or
tapply(tree[,5], tree[,2], mean) 	#refers to columns by location
tapply(tree[,7], tree[,3], sum)
sapply(tree[,5:8], mean)
tapply(tree[,7], tree[,2], max)
tapply(tree[,7], tree[,2], min)
sort(tree$dbh)
order(tree$dbh)
rev(sort(tree$dbh))
rev(order(tree$dbh))
# or:
sort(tree$dbh, decreasing = TRUE)
order(tree$dbh, decreasing = TRUE)
# or:
order(-tree$dbh)
tree[order(tree$dbh),]
# You can also sort by multiple columns. To sort by season and then by dbh, you do the following:
tree[order(tree$season, tree$dbh),]
tree[order(tree$BarkThick),]
tree[order(-tree$SapArea),]
tree[order(tree$spp),]
tree[order(tree$spp),]
tree[order(tree$SapArea),]
tree1=subset(tree, select=c(tree, SapDepth, SapArea))
tree1[order(-tree1$SapDepth),]
hist(tree$SapDepth, xlab="Sapwood Depth", main="Histogram: Sapwood Depth", col="gray50")
boxplot(SapDepth ~ spp, data=tree, ylab="SapDepth", col="darkslateblue", main="Boxplot: Sapwood Depth by Species")
# Notice that in this syntax for boxplot, you do not need to designate the data$column because there is a separate entry that specifies the data source.
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
par(mfrow=c(1,3))
tree=read.csv("/Users/hasansulaeman/Google Drive/Ecology of Infectious Diseases/Lab 4/Tree_data.csv", header=T)
head(tree)
tail(tree)
summary(tree)
names(tree)
dim(tree)
str(tree)
tapply(tree$dbh, tree$spp, mean)
#	or
tapply(tree[,5], tree[,2], mean) 	#refers to columns by location
tapply(tree[,7], tree[,3], sum)
sapply(tree[,5:8], mean)
tapply(tree[,7], tree[,2], max)
tapply(tree[,7], tree[,2], min)
sort(tree$dbh)
order(tree$dbh)
rev(sort(tree$dbh))
rev(order(tree$dbh))
# or:
sort(tree$dbh, decreasing = TRUE)
order(tree$dbh, decreasing = TRUE)
# or:
order(-tree$dbh)
tree[order(tree$dbh),]
# You can also sort by multiple columns. To sort by season and then by dbh, you do the following:
tree[order(tree$season, tree$dbh),]
tree[order(tree$BarkThick),]
tree[order(-tree$SapArea),]
tree[order(tree$spp),]
tree[order(tree$spp),]
tree[order(tree$SapArea),]
tree1=subset(tree, select=c(tree, SapDepth, SapArea))
tree1[order(-tree1$SapDepth),]
hist(tree$SapDepth, xlab="Sapwood Depth", main="Histogram: Sapwood Depth", col="gray50")
boxplot(SapDepth ~ spp, data=tree, ylab="SapDepth", col="darkslateblue", main="Boxplot: Sapwood Depth by Species")
# Notice that in this syntax for boxplot, you do not need to designate the data$column because there is a separate entry that specifies the data source.
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
par(mfrow=c(1,3))
par(mfrow=c(1,3))
par(mfrow=c(1,3))
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
par(mfrow=c(1,3))
par(mfrow=c(1,3))
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
par(mfrow=c(2,2))
hist(tree$SapDepth, xlab="Sapwood Depth", main="Histogram: Sapwood Depth", col="gray50")
boxplot(SapDepth ~ spp, data=tree, ylab="SapDepth", col="darkslateblue", main="Boxplot: Sapwood Depth by Species")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(mfrow=c(2,2))
hist(tree$SapDepth, xlab="Sapwood Depth", main="Histogram: Sapwood Depth", col="gray50")
boxplot(SapDepth ~ spp, data=tree, ylab="SapDepth", col="darkslateblue", main="Boxplot: Sapwood Depth by Species")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
boxplot(tree$Infected, tree$NobarkArea)
t.test(dbh ~ Infected, data = tree)
t.test(tree$dbh ~ tree$Infected, data = tree)
t.test(dbh ~ Infected, data = tree)
t.test(sapdepth ~ Infected, data = tree)
t.test(Sapdepth ~ Infected, data = tree)
t.test(SapDepth ~ Infected, data = tree)
t.test(BarkThick ~ Infected, data = tree)
t.test(SapDepth ~ Infected, data = tree)
t.test(BarkThick ~ Infected, data = tree)
t.test(NobarkArea ~ Infected, data = tree)
t.test(Heartwood ~ Infected, data = tree)
t.test(SapArea ~ Infected, data = tree)
t.test(dbh ~ Infected, data = tree)
par(mfrow=c(3,1)) #1,3 is ugly
hist(tree$SapDepth, xlab="Sapwood Depth", main="Histogram: Sapwood Depth", col="gray50")
boxplot(SapDepth ~ spp, data=tree, ylab="SapDepth", col="darkslateblue", main="Boxplot: Sapwood Depth by Species")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
par(mfrow=c(3,1)) #1,3 is ugly
hist(tree$SapDepth, xlab="Sapwood Depth", main="Histogram: Sapwood Depth", col="gray50")
boxplot(SapDepth ~ spp, data=tree, ylab="SapDepth", col="darkslateblue", main="Boxplot: Sapwood Depth by Species")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
tree2=tree[order(tree$BarkThick),]
tree2=tree[order(-tree$SapArea),]
tree[order(tree$spp),]
par(mfrow=c(2,2)) #1,3 is ugly
hist(tree$SapDepth, xlab="Sapwood Depth", main="Histogram: Sapwood Depth", col="gray50")
boxplot(SapDepth ~ spp, data=tree, ylab="SapDepth", col="darkslateblue", main="Boxplot: Sapwood Depth by Species")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
plot(tree$dbh, tree$Heartwood, pch=17, col="darkred", ylab= "Area", xlab="DBH(cm)", main="DBH vs. Heartwood and Sapwood")
par(new=TRUE)
points(tree$dbh, tree$SapArea, pch=19, col="darkgreen", type="p")
par(new=TRUE)
legend("topleft", legend=c("Heartwood", "Sapwood"), pch=c(17,19), col=c("darkred", "darkgreen"), bg="gray95")
setwd("/Users/hasansulaeman/Dropbox/Chaukulkar Manuscript/Data files")
mue <- read.csv('museumfinal.csv', header=TRUE)
k=step(lm, scale = 0,
direction = "both",
trace = 1, keep = NULL, steps = 1000, k = 2)
lm <- glm(Disease_St ~ Decade+ SVL + Elevation +  Species + Bioregion + Lifestage + bio_1 + bio_3 + bio_5 + bio_6 + bio_7 + bio_12 + bio_15 + bio_17 + Built2009 + crop2005 + NavWat2009 + Pastur2009 + Popden2009 + Railways + Roads +amph_rich + lakepond + swampmarsh + IceMass + Playa + streaminte +streamperr + coastline + artificial + pipeline + canalditch + connector + aet_yr + crops_2, data = mue, family = binomial)
summary (lm)
lm2 <- glm(Disease_St ~ SVL + Elevation +  Species + Bioregion + Lifestage + bio_1 + bio_3 + bio_5 + bio_6 + bio_7 + bio_12 + bio_15 + bio_17 + Built2009 + crop2005 + NavWat2009 + Pastur2009 + Popden2009 + Railways + Roads +amph_rich + lakepond + swampmarsh + IceMass + Playa + streaminte +streamperr + coastline + artificial + pipeline + canalditch + connector + aet_yr + crops_2, data = mue, family = binomial)
summary (lm)
k=step(lm, scale = 0,
direction = "both",
trace = 1, keep = NULL, steps = 1000, k = 2)
k
k2=step(lm2, scale = 0,
direction = "both",
trace = 1, keep = NULL, steps = 1000, k = 2)
k2
k2$coefficients
lmfinal=(Disease_St ~ Elevation + bio_1 + bio_12 + bio_17 +
Built2009 + NavWat2009 + Railways + lakepond + swampmarsh +
Playa + streamperr + artificial + canalditch + aet_yr + crops_2,
family = binomial, data = mue)
lmfinal=glm(Disease_St ~ Elevation + bio_1 + bio_12 + bio_17 +
Built2009 + NavWat2009 + Railways + lakepond + swampmarsh +
Playa + streamperr + artificial + canalditch + aet_yr + crops_2,
family = binomial, data = mue)
lmfinal
summary(lmfinal)
library(pscl) #For the zero-inflation model
library(MASS)
library(boot)
zeroinf = zeroinfl(Disease_St ~ Decade + Elevation +bio_3, data = mue, dist = "negbin", link= "logit")
zeroinf = zeroinfl(Disease_St ~ Elevation + bio_1 + bio_12 + bio_17 +
Built2009 + NavWat2009 + Railways + lakepond + swampmarsh +
Playa + streamperr + artificial + canalditch + aet_yr + crops_2, data = mue, dist = "negbin", link= "logit")
lmfinal[[3]]
lmfinal
k2=step(lm2, scale = 0,
direction = "both",
trace = 1, keep = NULL, steps = 1000, k = 2)
summary(lmfinal)
ctest = mue[c(48:58)]
facotr.cor = rcorr(as.matrix(ctest) , type= "pearson")
facotr.cor
library(Hmisc)
library(corrplot)
flattenCorrMatrix <- function(M, p_mat) {
ut <- upper.tri(M)
data.frame(
row = rownames(M)[row(M)[ut]],
column = rownames(M)[col(M)[ut]],
cor  =(M)[ut],
p = p_mat[ut]
)
}
ctest = mue[c(48:58)]
factor.cor = rcorr(as.matrix(ctest) , type= "pearson")
factor.cor
a=flattenCorrMatrix(factor.cor$r, factor.cor$P)
b=subset(a, cor>0.9)
b
